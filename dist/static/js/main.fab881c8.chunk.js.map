{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducers.js","store/reducers/projectReducers.js","store/reducers/rootReducers.js","components/config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","Date","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","initState","authReducers","action","message","projectReducers","rootReducers","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","storage","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fab881c8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ul>\r\n            <li><NavLink to = '/create' className = \"right\" >New Project</NavLink></li>\r\n            <li><a onClick= {props.signOut} className = \"right\" >Log Out</a></li>\r\n            <li><NavLink to = '/' className = \"btn btn-floating-blue lighten-4\" >\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut : () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null , mapDispatchToProps )(SignedInLinks)","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signInWithEmailAndPassword(\r\n        credentials.email,\r\n        credentials.password\r\n    ).then(() => {\r\n        dispatch({type: 'LOGIN_SUCCESS'});\r\n    }).catch((err) => {\r\n        dispatch({type: 'LOGIN_ERROR', err});\r\n    }); \r\n    \r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch , getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch , getState, {getFirebase , getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <ul>\r\n            <li><NavLink to = '/signup' className = \"right\" >Sign up</NavLink></li>\r\n            <li><NavLink to = '/signin' className = \"right\" >Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    const links = auth.uid ? <SignedInLinks profile = {profile} /> : <SignedOutLinks />;\r\n    return (\r\n        <nav className = \"nav-wrapper grey darken-2\">\r\n            <div className=\"container \">\r\n                <div className=\"left\">\r\n                    <Link to = '/' className = \"brand-logo\" >MarioPlan</Link>\r\n                </div>\r\n                <div className=\"container right\">\r\n                    {links}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section-notifications\">\r\n            <div className=\"card z-depth-1\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title text-align-left\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map (item => {\r\n                            return (\r\n                                <li key = {item.id}>\r\n                                    <span className=\"pink-text\">{ item.user} </span>\r\n                                    <span>{ item.content }</span>\r\n                                    <div className= \"grey-text note-date\">{moment( item.time.toDate()).fromNow() }</div>\r\n                                </li>\r\n                            )  \r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card project-summary \">\r\n            <div className=\"card-content grey-text text-darken-2\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n                <p className=\"grey-text\">Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className= \"project-list section\">\r\n            {projects && projects.map (project => {\r\n                return (\r\n                    <Link to= {'/project/' + project.id}>\r\n                    <ProjectSummary project = {project} key = {project.id}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n            \r\n        </div> \r\n    )\r\n}\r\n\r\nexport default ProjectList","import React , {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component{\r\n    render(){\r\n        const { projects, auth , notifications } = this.props;\r\n        if( !auth.uid ) { return <Redirect to = '/signin'/> }\r\n        else {\r\n        return(\r\n            <div className = \"container\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects= {projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset m1\">\r\n                        <Notifications notifications= {notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )}\r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' , orderBy: ['createdAt', 'desc']},\r\n        {  collection: 'notifications', limit : 4, orderBy: ['time', 'desc'] }\r\n        \r\n    ])\r\n    )(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    //const id = props.match.params.id;\r\n    console.log(props);\r\n\r\n    const { project , auth } = props;\r\n    if (!auth.uid) return <Redirect to = '/signin' />\r\n    if( project ) {\r\n        return (\r\n            <div className = \"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action grey-text text-lighten-1\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div><p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <h5>Loading Content</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project : project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state= {\r\n        email: '',\r\n        password : ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() { \r\n        const { authError, auth } = this.props;\r\n        if( auth.uid) return <Redirect to ='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"grey lighten-5\">\r\n                    <h5 className=\"grey-text text-darken-3 auto\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input type=\"email\" id=\"email\" onChange= {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Log In</button>\r\n                    </div>\r\n                    <div className=\"red-text\">\r\n                        {authError ? <h6>Either the Email or Password or Both are wrong! {authError}</h6> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n} \r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux' ;\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state= {\r\n        email: '',\r\n        password : '',\r\n        firstName : '',\r\n        lastName : ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if( auth.uid ) return <Redirect to = '/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"grey lighten-5\">\r\n                    <h5 className=\"grey-text text-darken-3 auto\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name: </label>\r\n                        <input type=\"text\" id=\"firstName\" onChange= {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name: </label>\r\n                        <input type=\"text\" id=\"lastName\" onChange= {this.handleChange}/>\r\n                    </div>\r\n                  \r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email: </label>\r\n                        <input type=\"email\" id=\"email\" onChange= {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"center red-text\">\r\n                        { authError ? <p> {authError}</p> : null}  \r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {createProject } from '../../store/actions/projectActions'\r\n//import { createStore } from 'redux'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state= {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n      //  console.log(this.state);\r\n      this.props.createProject(this.state);\r\n      this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to = '/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"grey lighten-5\">\r\n                    <h5 className=\"grey-text text-darken-3 auto\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title: </label>\r\n                        <input type=\"text\" id=\"title\" onChange= {this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content: </label>\r\n                        <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\"onChange= {this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-3 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState , {getFirebase, getFirestore}) => {\r\n        //async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT' , project });\r\n        }).catch((err) => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR' , err });\r\n        })\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport {BrowserRouter , Switch , Route} from 'react-router-dom';\r\nimport Navbar from './components/layout/Navbar';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport ProjectDetails from './components/projects/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/projects/CreateProject'\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <BrowserRouter>\r\n      <div className=\"App center\" >\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path = '/' component = {Dashboard} />\r\n          <Route path = '/project/:id' component = {ProjectDetails} />\r\n          <Route path = '/signin' component = {SignIn} />\r\n          <Route path = '/signup' component = {SignUp} />\r\n          <Route path = '/create' component = {CreateProject} />\r\n        </Switch>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducers = (state = initState, action) => {\r\n    switch (action.type){\r\n        case 'LOGIN_ERROR' :\r\n            console.log('login error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login successful');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signout successful');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:  \r\n            return state;\r\n    }\r\n}\r\nexport default authReducers","const initState = {\r\n    projects:[\r\n        {id: '1', title: 'Help out Mario', content: 'lorem ipsum euibfwb eubwbfui eiubfd iuefwb'},\r\n        {id: '2', title: 'bUY Milk Binod', content: 'lorem ipsum euibfwb eubwbfui eiubfd iuefwb'},\r\n        {id: '3', title: 'Play with Yoshi', content: 'lorem ipsum euibfwb eubwbfui eiubfd iuefwb'}\r\n    ]\r\n}\r\nconst projectReducers = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project' , action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default: \r\n            return state; \r\n    }\r\n    \r\n}\r\nexport default projectReducers","import { combineReducers } from 'redux';\r\nimport authReducers from './authReducers';\r\nimport projectReducers from './projectReducers';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducers = combineReducers({\r\n    auth: authReducers,\r\n    project: projectReducers,\r\n    firestore : firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducers","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\nimport 'firebase/storage';\r\nimport \"firebase/database\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBXA69lRLAk5WfXGpYxDO4m4aRUGqHlCqI\",\r\n    authDomain: \"marioplan-netninja-dc8ce.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-netninja-dc8ce.firebaseio.com\",\r\n    projectId: \"marioplan-netninja-dc8ce\",\r\n    storageBucket: \"marioplan-netninja-dc8ce.appspot.com\",\r\n    messagingSenderId: \"294069454321\",\r\n    appId: \"1:294069454321:web:83831e2084696c53517050\",\r\n    measurementId: \"G-5MJYGJ2P64\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.analytics();\r\n // firebase.firestore.settings({timestampsInSnapshots : true});\r\n  //const auth = firebase.auth();\r\n  const storage = firebase.storage();\r\n  export {\r\n  storage, firebase as default\r\n  }\r\n  \r\n//  export default {firebase };","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport rootReducers from \"./store/reducers/rootReducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\r\nimport fbConfig from \"./components/config/fbConfig\";\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig),\r\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users' ,attachAuthIsReady : true })\r\n  )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  );\r\n})\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}